#!/usr/bin/fift -s
"TonUtil.fif" include
"Asm.fif" include

$1 parse-int =: workchain
$2 parse-int =: first_owner_pubkey
$3 $>GR =: first_owner_balance
$4 $>GR =: gas_per_send
$5 parse-int =: gas_provider_pubkey
$6 parse-int =: nanograms_per_token





"external_token.fif" include <s =: contract_code

<b first_owner_balance Gram, b> <s
first_owner_pubkey
dictnew
256
udict!
drop
=: balances

<b 1000 1000000000 * Gram, gas_provider_pubkey 256 u, b> <s
nanograms_per_token 32 <<
dictnew
152
udict!
drop
=: providers_pool

<b 0 1 u, <b "Test Token" $>B B, b> ref, balances dict, gas_per_send Gram, dictnew dict, providers_pool dict, b> =: contract_storage 
<b b{00110} s, <b contract_code s, b> ref, contract_storage ref, b>
dup =: state_init

dup hashu workchain swap 2constant contract_address
."new token address = " contract_address .addr cr


."Non-bounceable address (for init): " contract_address 7 .Addr cr
."Bounceable address (for later access): " contract_address 6 .Addr cr

<b b{1000100} s, contract_address addr, b{000010} s, state_init <s s, b{0} s, b>
2 boc+>B

"external_token_creation_query.boc" tuck B>file
."(Saved token contract creating query to file " type .")" cr

